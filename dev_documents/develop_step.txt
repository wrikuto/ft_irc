# 開発ステップ

## ステップ1: クライアントの認証機能の追加 (clear!)
1. `Server::acceptClient`メソッドを修正し、クライアントからパスワードを受け取る。
2. 受け取ったパスワードをサーバーのパスワードと比較し、一致しない場合は接続を切断する。

## ステップ2: ニックネームとユーザー名の設定 (clear!)
1. クライアントからのニックネーム設定コマンド（例: NICK）を処理するメソッドを追加。
2. クライアントからのユーザー名設定コマンド（例: USER）を処理するメソッドを追加。
3. クライアントごとにニックネームとユーザー名を管理するデータ構造を追加。

## ステップ3: チャネルの作成と参加 (clear!)
1. チャネルを管理するクラスを作成。
2. クライアントがチャネルを作成し、参加できるようにするメソッドを追加。
3. チャネルごとに参加しているクライアントを管理するデータ構造を追加。

## ステップ4: メッセージの送受信 (clear!)
1. クライアント間でメッセージを送受信するためのメソッドを追加。
2. チャネル内の全てのクライアントにメッセージをブロードキャストする機能を実装。

## ステップ5: プライベートメッセージの送信 (clear!)
1. クライアントが特定の他のクライアントにプライベートメッセージを送信できるようにするメソッドを追加。

## ステップ6: チャネルオペレーターの権限管理
1. チャネルオペレーターが特定の管理コマンドを実行できるようにするメソッドを追加。
2. ユーザーのキック、チャネルのモード変更などの機能を実装。

## ステップ7: エラーハンドリングとテスト
1. 各機能のエラーハンドリングを追加。
2. 各機能が正しく動作することを確認するためのテストを実施。

## ステップ8: ドキュメントの整備
1. コードのコメントを追加し、可読性を向上させる。
2. 使用方法や機能の説明を含むドキュメントを作成。

